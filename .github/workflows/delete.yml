name: Delete AWS Resources

on:
  workflow_dispatch:

jobs:
  delete-resources:
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Delete EKS Cluster
      run: |
        aws eks delete-cluster --name my-eks-cluster --region us-east-1

  delete-EC2:
    runs-on: ubuntu-latest
    steps:      
    - name: Delete EC2 Instance
      run: |
        INSTANCE_ID=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=JenkinsEC2Instance" --query "Reservations[].Instances[].InstanceId" --output text)
        if [ ! -z "$INSTANCE_ID" ]; then
          aws ec2 terminate-instances --instance-ids $INSTANCE_ID
        fi

    - name: Delete VPC and related resources
      run: |
        VPC_ID=$(aws ec2 describe-vpcs --filters "Name=tag:Name,Values=JenkinsVPC" --query "Vpcs[].VpcId" --output text)
        if [ ! -z "$VPC_ID" ]; then
          # Delete Internet Gateway
          IGW_ID=$(aws ec2 describe-internet-gateways --filters "Name=attachment.vpc-id,Values=$VPC_ID" --query "InternetGateways[].InternetGatewayId" --output text)
          if [ ! -z "$IGW_ID" ]; then
            aws ec2 detach-internet-gateway --internet-gateway-id $IGW_ID --vpc-id $VPC_ID
            aws ec2 delete-internet-gateway --internet-gateway-id $IGW_ID
          fi
          
          # Delete Subnets
          SUBNET_IDS=$(aws ec2 describe-subnets --filters "Name=vpc-id,Values=$VPC_ID" --query "Subnets[].SubnetId" --output text)
          for SUBNET_ID in $SUBNET_IDS; do
            aws ec2 delete-subnet --subnet-id $SUBNET_ID
          done
          
          # Delete Route Tables
          RT_IDS=$(aws ec2 describe-route-tables --filters "Name=vpc-id,Values=$VPC_ID" --query "RouteTables[].RouteTableId" --output text)
          for RT_ID in $RT_IDS; do
            if [ "$RT_ID" != $(aws ec2 describe-route-tables --filters "Name=vpc-id,Values=$VPC_ID" "Name=association.main,Values=true" --query "RouteTables[].RouteTableId" --output text) ]; then
              aws ec2 delete-route-table --route-table-id $RT_ID
            fi
          done
          
          # Delete Security Groups
          SG_IDS=$(aws ec2 describe-security-groups --filters "Name=vpc-id,Values=$VPC_ID" --query "SecurityGroups[].GroupId" --output text)
          for SG_ID in $SG_IDS; do
            if [ "$SG_ID" != $(aws ec2 describe-security-groups --filters "Name=vpc-id,Values=$VPC_ID" "Name=group-name,Values=default" --query "SecurityGroups[].GroupId" --output text) ]; then
              aws ec2 delete-security-group --group-id $SG_ID
            fi
          done
          
          # Delete VPC
          aws ec2 delete-vpc --vpc-id $VPC_ID
        fi

    - name: Delete Key Pair
      run: |
        aws ec2 delete-key-pair --key-name jenkins-key-pair

    - name: Delete IAM Role and Instance Profile
      run: |
        aws iam remove-role-from-instance-profile --instance-profile-name JenkinsInstanceProfile --role-name JenkinsIAMRole
        aws iam delete-instance-profile --instance-profile-name JenkinsInstanceProfile
        aws iam detach-role-policy --role-name JenkinsIAMRole --policy-arn arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        aws iam delete-role --role-name JenkinsIAMRole

    - name: Confirm Deletion
      run: echo "Todos los recursos han sido eliminados."