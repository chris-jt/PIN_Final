name: Cleanup AWS Resources

on:
  workflow_dispatch:
    inputs:
      confirm_cleanup:
        description: 'Type "yes" to confirm resource cleanup'
        required: true
        default: 'no'

jobs:
  cleanup:
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm_cleanup == 'yes'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Delete EKS Cluster
      run: |
        eksctl delete cluster --name my-cluster --region us-east-1 --wait

    - name: Delete EC2 Instance
      run: |
        INSTANCE_ID=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=Jenkins" --query 'Reservations[0].Instances[0].InstanceId' --output text)
        if [ ! -z "$INSTANCE_ID" ]; then
          echo "Terminating EC2 instance: $INSTANCE_ID"
          aws ec2 terminate-instances --instance-ids $INSTANCE_ID
          aws ec2 wait instance-terminated --instance-ids $INSTANCE_ID
        else
          echo "No EC2 instance found with the name 'Jenkins'"
        fi

    - name: Delete Security Group
      run: |
        SG_ID=$(aws ec2 describe-security-groups --group-names jenkins-sg --query 'SecurityGroups[0].GroupId' --output text)
        if [ ! -z "$SG_ID" ] && [ "$SG_ID" != "None" ]; then
          echo "Deleting Security Group: $SG_ID"
          aws ec2 delete-security-group --group-id $SG_ID
        else
          echo "No Security Group found with the name 'jenkins-sg'"
        fi

    - name: Delete IAM Role and Instance Profile
      run: |
        ROLE_NAME="ec2-admin-role"
        PROFILE_NAME="ec2-admin-profile"
        
        # Detach policies from role
        aws iam detach-role-policy --role-name $ROLE_NAME --policy-arn arn:aws:iam::aws:policy/AdministratorAccess
        
        # Remove role from instance profile
        aws iam remove-role-from-instance-profile --instance-profile-name $PROFILE_NAME --role-name $ROLE_NAME
        
        # Delete instance profile
        aws iam delete-instance-profile --instance-profile-name $PROFILE_NAME
        
        # Delete role
        aws iam delete-role --role-name $ROLE_NAME

    - name: Delete Key Pair
      run: |
        KEY_NAME="jenkins"
        aws ec2 delete-key-pair --key-name $KEY_NAME

    - name: Delete EKS Console Access Policy
      run: |
        POLICY_ARN=$(aws iam list-policies --query 'Policies[?PolicyName==`EKSConsoleAccess-my-cluster`].Arn' --output text)
        if [ ! -z "$POLICY_ARN" ] && [ "$POLICY_ARN" != "None" ]; then
          IAM_USER=$(aws sts get-caller-identity --query "Arn" --output text | cut -d'/' -f2)
          aws iam detach-user-policy --user-name $IAM_USER --policy-arn $POLICY_ARN
          aws iam delete-policy --policy-arn $POLICY_ARN
        else
          echo "No policy found with the name 'EKSConsoleAccess-my-cluster'"
        fi

    - name: Cleanup Complete
      run: echo "All specified AWS resources have been cleaned up."